swagger: '2.0'
info:
  description: CARGO MANAGEMENT SYSTEM.
  version: 1.0.0
  title: Swagger Cargo
  termsOfService: 'http://swagger.io/terms/'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
basePath: /v1
tags:
  - name: customer
    description: Everything about customers
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: receipt
    description: 'Everything about receipt: new, lookup...'
  - name: user
    description: Operations about user
schemes:
  - http
paths:
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  /user/displayAll:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: getAllUsers
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied        
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserResponse'
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
  /customer:
    post:
      tags:
        - customer
      summary: Create Customer
      description: This can only be done by the logged in user.
      operationId: createCustomer
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created customer object
          required: true
          schema:
            $ref: '#/definitions/SuccessResponse'
      responses:
        default:
          description: successful operation
  /customer/{id}:
    post:
      tags:
        - customer
      summary: Create Customer
      description: This can only be done by the logged in user.
      operationId: getCustomerById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of customer id 
          required: true
          type: integer
          format: int64
      responses:
        default:
          description: successful operation   
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Customer"  
    delete:
      description: deletes a single customer based on the ID supplied
      operationId: deleteCustomerById
      parameters:
        - name: id
          in: path
          description: ID of customer to delete
          required: true
          type: integer
          format: int64
      responses:
        "204":
          description: customer deleted
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/SuccessResponse"       
  /customer/displayAll:
    get:
      tags:
        - customer
      summary: get all customer in system
      description: ''
      operationId: getAllCustomers
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied        
definitions:
  Customer:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      fullAddress:
        type: string
      phoneNumber:
        type: string
      emailAddress:
        type: string
  Sender:
    type: object
    properties:
      id:
        type: integer
        format: int64
      city:
        type: string
      state:
        type: string
      zipcode:
        type: string
  Recipient:
    type: object
    properties:
      id:
        type: integer
        format: int64
      ward:
        type: string
      district:
        type: string
      province:
        type: string
  ServiceType:
    type: string
    enum:
      - DOOR_TO_DOOR
      - AIRPORT_TO_AIRPORT
      - OTHER
  Package:
    type: object
    properties:
      id:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int64
      itemName:
        type: string
  TrackingNumber:
    type: object
    properties:
      id:
        type: integer
        format: int64
      description:
        type: string
      status:
        type: string
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      password:
        type: string
      roleId:
        type: integer
        format: int64
  UserResponse:
    type: object
    properties:
      baseResponse:
        $ref: '#/definitions/ApiResponseMessage'
      user:
        $ref: '#/definitions/User'
  SuccessResponse:
    type : object
    properties:
      baseResponse:
        $ref: '#/definitions/ApiResponseMessage'
      customer:
        $ref: '#/definitions/Customer'
  ApiResponseMessage:
    type : object
    properties:
      code:
        type: integer
        format: int64
      type:
        type : string
      message:
        type: string
  Role:
    type: object
    properties:
      id:
        type: integer
        format: int64
      roleName:
        type: string
      paymentMethodType:
        $ref: '#/definitions/PaymentMethod'
      createdDate:
        type: string
  PaymentMethod:
    type: string
    enum:
      - CASH
      - CHECK
  ReceiptStatus:
    type: string
    enum:
      - PENDING
      - DONE
      - CANCEL
  Receipt:
    type: object
    properties:
      id:
        type: integer
        format: int64
      trackingNumber:
        type: string
      sender:
        $ref: '#/definitions/Sender'
      recipient:
        $ref: '#/definitions/Recipient'
      package:
        $ref: '#/definitions/Package'
      declaredValues:
        type: string
      numberOfPackages:
        type: string
      insuranceAmount:
        type: string
      totalWeight:
        type: string
      unitPrice:
        type: number
      costPrice:
        type: number
      extraCost:
        type: number
      totalAmount:
        type: number
      totalCostPrice:
        type: number
      createdDate:
        type: string
      signedDate:
        type: string
      senderSignature:
        type: boolean
      senderId:
        $ref: '#/definitions/Sender'
      receiverSignature:
        type: boolean